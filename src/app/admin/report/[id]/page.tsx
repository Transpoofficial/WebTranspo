"use client";

import { useParams } from "next/navigation";
import { CalendarDays } from "lucide-react";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { useQuery } from "@tanstack/react-query";
import axios from "axios";

export default function ReportDetailPage() {
  const params = useParams();

  const {
    data: reportData,
    isLoading,
    error,
  } = useQuery({
    queryKey: ["report", params.id],
    queryFn: async () => {
      const { data } = await axios.get(`/api/reports/${params.id}`);
      return data.data;
    },
  });

  const formatCurrency = (amount: string | number) => {
    const numAmount = typeof amount === "string" ? parseFloat(amount) : amount;
    return new Intl.NumberFormat("id-ID", {
      style: "currency",
      currency: "IDR",
    }).format(numAmount);
  };

  const formatDate = (dateString: string) => {
    return new Intl.DateTimeFormat("id-ID", {
      year: "numeric",
      month: "long",
      day: "numeric",
    }).format(new Date(dateString));
  };

  if (isLoading) return <div className="container mx-auto p-6">Loading...</div>;
  if (error)
    return (
      <div className="container mx-auto p-6 text-red-500">
        Error: {(error as Error).message}
      </div>
    );
  if (!reportData)
    return <div className="container mx-auto p-6">No report found</div>;

  return (
    <div className="space-y-4">
      <div className="space-y-6">
        {/* Basic Info Card */}
        <Card>
          <CardHeader>
            <div className="flex items-center justify-between">
              <div>
                <CardTitle>ID: {reportData.id}</CardTitle>
                <CardDescription>
                  Periode: {reportData.reportPeriod}
                </CardDescription>
              </div>
              <Badge
                variant={reportData.isAutoGenerated ? "secondary" : "default"}
              >
                {reportData.isAutoGenerated ? "Auto Generated" : "Manual"}
              </Badge>
            </div>
          </CardHeader>
          <CardContent>
            <div className="flex items-center space-x-2 text-muted-foreground">
              <CalendarDays className="h-4 w-4" />
              <span>
                {formatDate(reportData.startDate)} -{" "}
                {formatDate(reportData.endDate)}
              </span>
            </div>
          </CardContent>
        </Card>

        {/* Orders Statistics */}
        <Card>
          <CardHeader>
            <CardTitle>Statistik Pesanan</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
              <div className="space-y-1">
                <p className="text-sm font-medium text-muted-foreground">
                  Total Pendapatan
                </p>
                <p className="text-2xl font-bold">
                  {formatCurrency(reportData.totalIncome)}
                </p>
              </div>
              <div className="space-y-1">
                <p className="text-sm font-medium text-muted-foreground">
                  Total Pesanan
                </p>
                <p className="text-2xl font-bold">{reportData.totalOrders}</p>
              </div>
              <div className="space-y-1">
                <p className="text-sm font-medium text-muted-foreground">
                  Pesanan Selesai
                </p>
                <p className="text-2xl font-bold">
                  {reportData.completedOrders}
                </p>
              </div>
              <div className="space-y-1">
                <p className="text-sm font-medium text-muted-foreground">
                  Pesanan Dibatalkan
                </p>
                <p className="text-2xl font-bold">
                  {reportData.canceledOrders}
                </p>
              </div>
              <div className="space-y-1">
                <p className="text-sm font-medium text-muted-foreground">
                  Pesanan Pending
                </p>
                <p className="text-2xl font-bold">{reportData.pendingOrders}</p>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Service Types */}
        <Card>
          <CardHeader>
            <CardTitle>Jenis Layanan</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid gap-4 md:grid-cols-2">
              <div className="space-y-1">
                <p className="text-sm font-medium text-muted-foreground">
                  Transport
                </p>
                <p className="text-2xl font-bold">
                  {reportData.transportOrders}
                </p>
              </div>
              <div className="space-y-1">
                <p className="text-sm font-medium text-muted-foreground">
                  Tour
                </p>
                <p className="text-2xl font-bold">{reportData.tourOrders}</p>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Report Metadata */}
        <Card>
          <CardHeader>
            <CardTitle>Informasi Laporan</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid gap-4 md:grid-cols-2">
              <div>
                <p className="text-sm font-medium text-muted-foreground">
                  Dibuat
                </p>
                <p className="text-sm">{formatDate(reportData.createdAt)}</p>
              </div>
              <div>
                <p className="text-sm font-medium text-muted-foreground">
                  Terakhir Diperbarui
                </p>
                <p className="text-sm">{formatDate(reportData.updatedAt)}</p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
